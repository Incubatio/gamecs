// Generated by CoffeeScript 1.4.0

/**
* @fileoverview
* Demonstrates pixel perfect collision detection utilizing image masks.
*
* A 'spear' is moved around with mouse or cursors keys - the text 'COLLISION'
* appears if the spear pixel collides with the unit.
*
* gamejs.mask.fromSurface is used to create two pixel masks
* that do the actual collision detection.
*/


(function() {

  require(['gamejs', 'mask', 'utils/vectors'], function(gamejs, mask, $v) {
    var images, imgPath, main;
    main = function() {
      var display, font, mSpear, mUnit, spear, spearPosition, tick, unit, unitPosition;
      display = gamejs.Display.setMode([500, 350]);
      spear = gamejs.Img.load(imgPath + 'spear.png');
      unit = gamejs.Img.load(imgPath + 'unit.png');
      mUnit = mask.fromSurface(unit);
      mSpear = mask.fromSurface(spear);
      unitPosition = [20, 20];
      spearPosition = [6, 0];
      font = new gamejs.Font('20px monospace');
      /** tick
      */

      tick = function() {
        var hasMaskOverlap, relativeOffset;
        gamejs.Key.get().forEach(function(event) {
          var delta, direction;
          direction = {};
          direction[gamejs.Key.K_UP] = [0, -1];
          direction[gamejs.Key.K_DOWN] = [0, 1];
          direction[gamejs.Key.K_LEFT] = [-1, 0];
          direction[gamejs.Key.K_RIGHT] = [1, 0];
          if (event.type === gamejs.Key.KEY_DOWN) {
            delta = direction[event.key];
            if (delta) {
              return spearPosition = $v.add(spearPosition, delta);
            }
          } else if (event.type === gamejs.Key.MOUSE_MOTION) {
            if (display.rect.collidePoint(event.pos)) {
              return spearPosition = $v.subtract(event.pos, spear.getSize());
            }
          }
        });
        display.clear();
        display.blit(unit, unitPosition);
        display.blit(spear, spearPosition);
        relativeOffset = $v.subtract(spearPosition, unitPosition);
        hasMaskOverlap = mUnit.overlap(mSpear, relativeOffset);
        if (hasMaskOverlap) {
          display.blit(font.render('COLLISION', '#ff0000'), [250, 50]);
        }
        return display.blit(font.render('Move with mouse or cursor keys.'), [10, 250]);
      };
      return gamejs.Time.interval(tick);
    };
    imgPath = 'assets/images/';
    images = ['spear.png', 'unit.png'].map(function(img) {
      return imgPath + img;
    });
    gamejs.preload(images);
    return gamejs.ready(main);
  });

}).call(this);
