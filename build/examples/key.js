// Generated by CoffeeScript 1.4.0

/**
* @fileoverview
* Sparkles with position and alpha are created by mouse movement.
* The sparkles position is updated in a time-dependant way. A sparkle
* is removed from the simulation once it leaves the screen.
*
* Additionally, by pressing the cursor UP key the existing sparkles will
* move upwards (movement vecor inverted).
*/


(function() {

  require(['gamejs'], function(gamejs) {
    var main;
    main = function() {
      var display, displayRect, instructionFont, sparkles, starImage, tick;
      display = gamejs.Display.setMode([850, 600]);
      gamejs.Display.setCaption('example key capture');
      starImage = gamejs.Img.load('assets/images/sparkle.png');
      instructionFont = new gamejs.Font('30px monospace');
      displayRect = display.rect;
      sparkles = [];
      tick = function(msDuration) {
        gamejs.Key.get().forEach(function(event) {
          if (event.type === gamejs.Key.KEY_UP) {
            if (event.key === gamejs.Key.K_UP) {
              return sparkles.forEach(function(sparkle) {
                return sparkle.deltaY *= -1;
              });
            }
          } else if (event.type === gamejs.Key.MOUSE_MOTION) {
            if (displayRect.collidePoint(event.pos)) {
              return sparkles.push({
                left: event.pos[0],
                top: event.pos[1],
                alpha: Math.random(),
                deltaX: 30 - Math.random() * 60,
                deltaY: 80 + Math.random() * 40
              });
            }
          }
        });
        sparkles.forEach(function(sparkle) {
          var r;
          r = msDuration / 1000;
          sparkle.left += sparkle.deltaX * r;
          return sparkle.top += sparkle.deltaY * r;
        });
        sparkles = sparkles.filter(function(sparkle) {
          return sparkle.top < displayRect.height && sparkle.top > 0;
        });
        display.fill('#000000');
        display.blit(instructionFont.render('Move mouse. Press Cursor up.', '#ffffff'), [20, 20]);
        return sparkles.forEach(function(sparkle) {
          starImage.setAlpha(sparkle.alpha);
          return display.blit(starImage, [sparkle.left, sparkle.top]);
        });
      };
      return gamejs.Time.interval(tick);
    };
    gamejs.preload(['assets/images/sparkle.png']);
    return gamejs.ready(main);
  });

}).call(this);
