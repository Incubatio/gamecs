// Generated by CoffeeScript 1.4.0

/**
* A bare bones Sprite and sprite Group example.
*
* We move a lot of Ship sprites across the screen with varying speed. The sprites
* rotate themselves randomly. The sprites bounce back from the bottom of the
* screen.
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  require(['gamecs'], function(gamecs) {
    /** The ship Sprite has a randomly rotated image und moves with random speed (upwards).
    */

    var Ship, main;
    Ship = (function(_super) {

      __extends(Ship, _super);

      function Ship(rect) {
        var dims, newDims;
        Ship.__super__.constructor.call(this);
        this.speed = 20 + (40 * Math.random());
        this.originalImage = gamecs.Img.load("assets/images/ship.png");
        dims = this.originalImage.getSize();
        newDims = [Math.round(dims[0] * (0.5 + Math.random())), Math.round(dims[1] * (0.5 + Math.random()))];
        this.originalImage = gamecs.Transform.scale(this.originalImage, newDims);
        this.rotation = 50 + parseInt(120 * Math.random());
        this.image = gamecs.Transform.rotate(this.originalImage, this.rotation);
        this.rect = new gamecs.Rect(rect);
      }

      Ship.prototype.update = function(msDuration) {
        this.rect.moveIp(0, this.speed * (msDuration / 1000));
        if (this.rect.top > 600) {
          this.speed *= -1;
          return this.image = gamecs.Transform.rotate(this.originalImage, this.rotation + 180);
        } else if (this.rect.top < 0) {
          this.speed *= -1;
          return this.image = gamecs.Transform.rotate(this.originalImage, this.rotation);
        }
      };

      return Ship;

    })(gamecs.Sprite);
    main = function() {
      var gShips, i, j, mainSurface, ship, tick, _i, _j;
      gamecs.Display.setMode([600, 600]);
      gamecs.Display.setCaption("Example Sprites");
      ship = new Ship([100, 100]);
      gShips = new gamecs.Group();
      for (j = _i = 0; _i < 4; j = ++_i) {
        for (i = _j = 0; _j < 25; i = ++_j) {
          gShips.add(new Ship([10 + i * 20, j * 20]));
        }
      }
      mainSurface = gamecs.Display.getSurface();
      tick = function(msDuration) {
        mainSurface.fill("#FFFFFF");
        gShips.update(msDuration);
        return gShips.draw(mainSurface);
      };
      return gamecs.Time.interval(tick);
    };
    /** MAIN
    */

    gamecs.preload(['assets/images/ship.png']);
    return gamecs.ready(main);
  });

}).call(this);
